<?xml version="1.0" encoding="utf-8"?>
<doc>
<assembly><name>MailBoxPlayGround</name></assembly>
<members>
<member name="M:ActorWithControl.isRoom(ActorWithControl.Identifier)">
<summary>
Some helper functions for domain &quot;game&quot;
</summary>
</member>
<member name="M:ActorWithControl.ReturnAll">
<summary>
 Return all states
</summary>
</member>
<member name="M:ActorWithControl.ReturnAllOf(Microsoft.FSharp.Core.FSharpFunc{ActorWithControl.Identifier,System.Boolean})">
<summary>
 Return all states
</summary>
</member>
<member name="M:ActorWithControl.Delete(ActorWithControl.Identifier)">
<summary>
 This just removes the reference
</summary>
</member>
<member name="M:ActorWithControl.ShowItemState(ActorWithControl.Identifier)">
<summary>
 Get item state
</summary>
</member>
<member name="M:ActorWithControl.AddAction(ActorWithControl.Identifier,System.Object)">
<summary>
 Insert item state
</summary>
</member>
<member name="M:ActorWithControl.fetchAgent(ActorWithControl.Identifier)">
<summary>
 Fetch agent form the control agent
</summary>
</member>
<member name="M:ActorWithControl.CreateNewItem(ActorWithControl.Identifier,System.Object)">
<summary>
 Create a new actor (like room or user)
</summary>
</member>
<member name="F:ReportingFromAgent.BatchProcessor`1.batchEvent">
<summary>
 Event used to report aggregated batches to the user
</summary>
</member>
<member name="P:ReportingFromAgent.BatchProcessor`1.BatchProduced">
<summary>
 Event that is triggered when a batch is collected
</summary>
</member>
<member name="M:ReportingFromAgent.BatchProcessor`1.Post(`0)">
<summary>
 The method adds one object to the agent
</summary>
</member>
<member name="T:ReportingFromAgent.BatchProcessor`1">
<summary>
 Agent that implements batch processing (eventContext can 
 be provided to specify synchronization context for event reporting)
</summary>
</member>
<member name="T:ReportingFromAgent.Agent`1">
<summary>
 Type alias that gives convenient name to F# agent type
</summary>
</member>
<member name="P:ReportingFromAgent.ThreadPool.BatchProcessor`1.BatchProduced">
<summary>
 Event that is triggered when a batch is collected
</summary>
</member>
<member name="M:ReportingFromAgent.ThreadPool.BatchProcessor`1.Post(`0)">
<summary>
 The method adds one object to the agent
</summary>
</member>
<member name="T:ReportingFromAgent.ThreadPool.BatchProcessor`1">
<summary>
 Agent that implements batch processing
</summary>
</member>
<member name="P:ReportingFromAgent.Template.BatchProcessor`1.BatchProduced">
<summary>
 Event that is triggered when a batch is collected
</summary>
</member>
<member name="M:ReportingFromAgent.Template.BatchProcessor`1.Post(`0)">
<summary>
 The method adds one object to the agent
</summary>
</member>
<member name="T:ReportingFromAgent.Template.BatchProcessor`1">
<summary>
 Agent that implements batch processing
</summary>
</member>
<member name="T:ReportingFromAgent.Template.Agent`1">
<summary>
 Type alias that gives convenient name to F# agent type
</summary>
</member>
</members>
</doc>
